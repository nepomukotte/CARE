test1
Please  do  not write behind the end of line tag so that it is  possible
to   send  a   Changelog   file  to  a  line  printer  directly.  Thanks.

For your entries please follow EXACTLY this style:

_yyyy/mm/dd_[Your Name]
_
___*_filename:
_____-_description
_
___*_filename2, filename3:
_____-_description
_
_
_
                                                     -*-*- END OF LINE -*-*-
  2025/03/20 Nepomuk Otte
  * TelescopeDate.[cpp,h], TraceGenerator.cpp
  - Changed to Pedestal calculation per pixel instead of one calculation per the
   entire camera to allow proper simulation of different NSB levels per pixels
                                                 
  2025/03/15 Nepomuk Otte
  * TriggerTelescopeTriDem.[cpp,h]
  - Added new class to simulate the Trinity Demonstrator Trigger
  * ReadConfig.cpp
    - In the definition of the NSBRatePerPixel we get rid of the PMT/SIPM type.
    The NSB is applied to all pixels of that telescope type
    like this for telescope type 0 
    * NSBRATEPERPIXEL 0 200
    make sure you comment this line in the config file if you want to use per
    pixel NSBs. NSBRATEPERPIXEL is a good option for the command line if you
    want to test the response for different NSB rates
    -The NSB rate is now defined for each pixel in the definition of PMPIX
    # teltype| PMT/SiPM type | what kind of pixel 1=square, 0=hexagonal| pixel id| NSB Rate [MHz] | x[mm]| y[mm] | pixel radius [mm] (distance from center to farthest corner) | roation angle
    * PMPIX 0 0 1  0  200  -96.8   -46.8 4.3841 0.0
  *VG_writeVBF.cpp changed ubyte to uint8_t


  2020/04/23 Nepomuk Otte
  SPB2 Branch
  * VG_writeVBF.cpp 
  Increased fmaxNumChannels from 500 to 20000
  * CameraAndReadOut.cpp
  Set the maximum number of pixels in VG_writeVBF to the camera with the highest
  number of pixel. The above two changes allow the simulation of cameras with more than 500 pixels.
  * PlotSPB2Events.cpp
  Added basic macro to display events of the SPB2 experiment.

  2020/04/23 Oscar Romero Matamala
  SPB2 Branch
  * TriggerTelescopeBase.[cpp,h], TriggerTelescopeVERITAS.[cpp,h],
  TriggerTelescopeSPB2.[cpp,h], CameraAndReadout.cpp
    -Restructured the TriggerTelescope class to allow for easier integration of
    other trigger schemes. Now there is a trigger telescope base class. All
    other telescope trigger classes derive from that. The
    TriggerTelescopeVERITAS class includes all the functionality of the previous
    CARE version. 
    -I created a class for the SPB2 mission. To configure it, the pixels
    belonging to one MUSIC chips are members of the same group in the
    configuration file. The bifocal trigger logic looks for coincidences with
    all neighboring groups listed in GRPNGHBR.
  * FADC.cpp
    -Added error message in case the sum of the FADC trace is smaller than the
    simulated analog trace and have to program quit
  * ArrayTrigger.cpp
    -Code doesn't quit anymore in case the coincidence time is set less than 0
    if at the same time the telescope multiplicity is 1 (i.e. no array trigger is used)

  2019/12/11 Nepomuk Otte
  This Version is tagged 1.7.1
  * ReadConfig.[cpp,h]
    -Fixed variable initialization in constructor. Apparently not standard
    according to codacity

  2019/12/11 Nepomuk Otte
  This Version is tagged 1.7
  * TraceGenerator.cpp, ReadConfig.[cpp,h],TelescopeData.[cpp,h]
    -added functionality to simulate more than one PMT/SiPM type per camera.
    Instructions on how to modify and setup the configuration file
    1. In the beginning of the configuration files four different parameters are
    needed in the following order
    #1. Number ot PMT/SiPM types
     * NBRPMTTYPES 2 

    #2. The Number of telescope types
     * NBRTELTYPES 1

    #3. Number of telescope (NBRTL)
     * NBRTL 4

    #4.  Camera configuration
    #   -telescope type
    #   -the number of phototubes.
    #   -the number of groups of summed pixel
    # IMPORTANT: the telescope types have to be listed in increasing order
    * CAMRA 0 499  0

   The NSB is now given for each PMT type and each telescope type separately
   The example specifies the NSB for telescope type 0, PMT/SiPM type 0 is set to
   300 MHz per pixel and PMT/SiPM type 1 is set to 100 MHz per pixel
   #the NSB rate in MHz per pmt/SiPM type and telescope type
   # telescope type | PMT type | NSB rate in MHZ
   * NSBRATEPERPIXEL 0 0 300
   * NSBRATEPERPIXEL 0 1 100

   Afterpulsing (constant and slope) is now specified per PMT/SiPM type and not for each telescope
   type

   The QE/PDE has to be specified for each PMT/SiPM type
   #QUEFF [PMT type] [number of lines following]
   #PMT type 0
   * QUEFF 0 51
   100 0.0
   200 0.09494
   ...
   #PMT type 1
   * QUEFF 1 28
   100 0.0
   200 0.09494

   For each pixel the type of PMT/SiPM has to be specified using the PMPIX
   configuration. The second parameter gives the PMT/SiPM type
   #Pixel configuration, last three numbers are not used
   # teltype| PMT/SiPM type | what kind of pixel 1=square, 0=hexagonal| pixel id| x[mm]| y[mm] | pixel radius [mm] (distance from center to farthest corner) | roation angle
   * PMPIX 0 1 0     0           0.00            0.00 18.1 0.0
   * PMPIX 0 1 0     1          31.40           -0.00 18.1 0.0



    added option to simulate transit time spread 
     #Transit time spread (RMS) of the photoelectrons making it through the
	   PMT/SiPM in ns 
	  * TRANSITTIMESPREAD 0 0
  * ReadConfig.cpp
    -fixed bug that did not output the gain sigma value to the stdout while
	reading in the configuration file


  2017/10/09 Nepomuk Otte
  This Version is tagged 1.6.4
  * TraceGenerator.cpp, ReadConfig.[cpp,h],TelescopeData.[cpp,h]
    -added option to simulate transit time spread 
     #Transit time spread (RMS) of the photoelectrons making it through the
	   PMT/SiPM in ns 
	  * TRANSITTIMESPREAD 0 0
  * ReadConfig.cpp
    -fixed bug that did not output the gain sigma value to the stdout while
	reading in the configuration file


  2017/03/17 Nepomuk Otte
  This Version is tagged 1.6.3
  * TriggerTelescopeNeighbor.cpp
    -made a loop exit faster after the first time is found the discrimantor
	fires.
  * TriggerTelescopeNeighbor.cpp, TelescopeData.h  
    -write out the time a triggered pixel is above threshold into the root
	file. The variable name is vTimeOverThreshold and is a float vector

  2015/12/01 Nepomuk Otte
  This Version is tagged 1.6.2
  * CameraAndReadout.cpp
    -Included functionality to only simulate pedestal events. Requires that
    CARE still gets a valid GrOptics file to not break initializing the VBF
    file. Should be cleaned up in a future version

  2015/06/04 Nepomuk Otte
  This Version is tagged 1.6.1
  * CameraAndReadout.cpp, TraceGenerator.cpp, TelescopeData.[h,cpp]
    - Added the the variable vSumTimeInPixel in the root file. It gives the
    sum of all the times of the Cherenkov photons in one pixel. t=0 is the
    average arrival time of the photons per camera

  2015/06/03 Nepomuk Otte
  This Version is tagged 1.6.0
  * TraceGenerator.cpp
  -The position of a single pe signal in the trace is now given by where t=0
  for the input pulse and not where its minimum is. This avoids problems where
  input pulses are affected by nonlinearities in the signal chain that make
  the pulse extend to longer times and the peak appear later than for pulses
  in the linear range
  * TelescopeData.cpp, TriggerTelescopeNextNeighbor.cpp
  - reset  vTriggerCluster.resize(0) explicitly in the TelescopeData class.
  The Vector did not clear reliably from event to event and untriggered
  telescope had pixels that were marked as triggered in the root output file 
 
 Made sure that electronic noise is only added to high gain trace and not
  for low gain trace

  2015/05/12 Nepomuk Otte
  This Version is tagged 1.5.6
  * TraceGenerator.cpp
  - Made sure that electronic noise is only added to high gain trace and not
  for low gain trace

 2015/03/31 Nepomuk Otte
  This Version is tagged 1.5.5
  * TelescopeTriggerNextNeighbor.cpp
  - Fixed bug that crashed CARE if a multiplicity trigger of one is requested
  at telescope level

  2015/03/06 Nepomuk Otte
  * CameraAndReadout.cpp, VG_writeVBF.cpp, VG_writeVBF.h
  -Piped the CORSIKA runnumber and Shower ID into the VBF output. 
  -Latest untagged master VBF as per 3/6/15 is required for CARE to work now.

  2015/01/03 Nepomuk Otte
  This Version is tagged 1.5.4
  * TraceGenerator.cpp
  -removed unused variable that causes a warning at compilation time
  * CameraAndReadout.cpp
  -added pointer to random number generator in constructor of TelescopeData
  objects 
  These two changes do not affect the outcome of the simulations

  2014/09/19 Nepomuk Otte
  This Version is tagged 1.5.3
  * TraceGenerator.cpp
  -Removed debug statement in output about low gian pulses

  2014/09/19 Nepomuk Otte
  This Version is tagged 1.5.2
  * ArrayTrigger.cpp, CameraReadout.cpp
  -Fixed bug determining the triggertime for telescopes that are not triggered
  * TraceGenerator.cpp
  -Disabling the interpolation of attenuation between pulse shapes


  2014/08/02 Nepomuk Otte
   This Version is tagged 1.5.1
   * CameraAndReadout.cpp
   - When enabled traces, were not written into the root file.

  2013/12/11 Nepomuk Otte
   This Version is tagged 1.5
   * ReadConfig, TraceGenerator, TelescopeData, FADC, Display
   -Added FADCDCTOMVCONVERSION to the configuration. This variable multiplied
   with FADCPETODCCONVERSION gives the mv/PE conversion factor at the input of 
   the FADC and is used to pick the right pulse shape when the trace is assembled taking non-linearities in
   the signal chain into account.
   -Added PILEUPWINDOW to the configuration. This variable set the width
   of the window that is used to find the number of photons that pile up
   around any given photon. It is used to find the right pulse shape.
  - In the GenerateNSB function fixed a small bug that started the generation
  of the trace at -StartTimeAveragePulse instead of -StopTimeAveragePulse
  -Added array fPileUpAmplitudeForPhoton to TelescopeData class. It stores the
  number of photons that pile up around any given photon. The information is
  used to pick the right pulse shape.
  -Got rid of vector<Float_t> *fTracesInSumGroupsNSBOnly;  //holds the NSB
  traces for each sumgroup in TriggerTelescopeNextNeighbor. this was only used
  for displaying purposes.
  -changed config parameter that handles the high gain pulse shapes to
  HIGHGAINPULSESHAPE
  -Got rid of the functions to show the FADC trace in the FADC class. Instead
  I created an analog function ShowFADC in the display class
  -Added a separate pedestal for the low gain. This requires a change of the
  FADCPEDESTAL value. Now there are 
  HIGHGAINPEDESTAL 0 16 and FADCLOWGAINPEDESTAL 0 8

  2013/05/17 Nepomuk Otte
   * ArrayTrigger,FADC,CameraAndReadout
   - modified the Arraytrigger that the readout time / trigger time for a
   telescope is relative to the telescope trigger time if the telescope
   triggered within the coincidence window, otherwise the average of the
   trigger times of the other telescopes is used. That is how VTS works
   - reverted the FADC readout to take th e new time schemes described above

  2013/05/16 Nepomuk Otte
   * TraceGenerator.[cpp],TelescopeData,ArrayTrigger,FADC,CameraAndReadout
   - modified the way the start of the readout is determined in the FADC
     Previously the average photon arrival time was used for telescopes that
     did not trigger but have Cherenkov photons. Now the earliest array
     trigger time is used. Maybe this should be the default for all telescopes
     in VERITAS

  2013/02/19 Nepomuk Otte
   This version is taged v1.4.1
   * TraceGenerator.[cpp]
   - fixed bug that wrote all cherenkov photons into file and not the pe

  2012/11/26 Nepomuk Otte
   This version is taged v1.4
   * VBF-0.3.3.tar.gz 
   - added the VBF package
   - added an example configuration file for VERITAS
   config/CARE_VERITAS_Example.cfg

  2012/11/25 Nepomuk Otte

   * ReadConfig.[cpp,h]; TelescopeData.[cpp,h]; TraceGenerator.[cpp,h];
   CameraAndReadout.cpp
   - added capability to set the relative gain for each telescope
   - added the capability to set electronic noise
     Both are set as parameters of the TLCFG record
     * TLCFG 0  1 0 0 1  0.75 0.0
     #   Parameters for each telescope (TLCFG) the parameters are:
     #   -the telescope identification number in the CARE simulations 
     #   -the telescopes ID in the hyperarray (for CTA) is the same as tel id
     if all telescopes are used
     #   -the telescope type
     #   -the sigma of the electronic noise in units of the single pe
     amplitude for a relative telescope gain of one
     #    a sigma of 0 means no electronic noise
     #   -the relative gain of the telescope
     #   -the Winston Cone efficiency can be modified to adjust 
     #    the total optical throughput of that specific telescope
     #   -the sigma by which the optical psf is blured [mm]
     #    Add additional bluring of optical PSF. The position of the photon
     will be reevaluated by adding
     #    a random shift  x = x + 1/sqrt(2 pi sigma^2)e(-x_rand^2/(2sigma^2)
     and the same in y
     #    the sigma of the Gaussians in mm by which the optical PSF should be
     blured in addition
     #    if the sigma is <=0 no blurring is used


  2012/11/10 Nepomuk Otte

   This version is tagged v1.3
   * FADC.cpp
   - Fixed major bug that prevented the Low Gain trace from being properly
   generated

   CameraAndReadout.cpp
     - added the hi/lo gain bit in the output root file

  2012/10/18 Nepomuk Otte

   This Version is tagged v1.2.3
   * CameraAndReadout.cpp
     - Fixed a bug in properly writing out the telescope trigger bits into the
     root file.

  2012/10/12  Nepomuk Otte

   This Version is tagged v1.2.2
   * CameraAndReadout.cpp
     - Fixed a check that was comparing the number of telescopes in the input
     file with the number of telescopes in the configuration file. That check
     exited the code if the number of telescopes in the configuration file was
     less than the number of telescopes in the input file. But this is a
     possibility if one wants to study subarrays.


  2012/10/10  Nepomuk Otte

   This Version is tagged v1.2.1
   * TraceGenerator.cpp
     - fixed bug in the procedure that reads in the pulse shape from a text
     file. Sometimes it could happen that for the last sample unallocated
     memory was looked at. 
   * config/VTSCameraDraw.C
     - added root macro to write the VERITAS camera geometry

  2012/10/07  Nepomuk Otte

   This Version is tagged v1.2
   * CameraAndReadout.cpp,TelescopeData.[h,cpp]
     - added variable iNumPhotonsInFocalPlane to TelescopeData and write this
     into the root file. It has all the photons that arrive in the focal plane
   * CameraAndReadout.cpp
     - Added a new option -nt or -notraces to CameraAndReadout. With this 
       option in the commandline the traces are not written into the root file
       making them considerably smaller.

  2012/09/14  Nepomuk Otte

   * CameraAndReadout.cpp; TelescopeData.[h,cpp]
     - Added a new vector iPEInPixel to TelescopeData which is the number of
       Cherenkov photo electrons in each pixel
     - Now Write the QDC, FADC trace and photo electrons into the root file 

  2012/08/06  Nepomuk Otte

   * CameraAndReadout.cpp
     - The number of FADC samples was not properly set in the VBF writer 

2012/07/15  Nepomuk Otte

   * CameraAndReadout.cpp
     - Changed the way the command line options are given. Instead of just
     listing the arguments, every argument has a flag. The order is not
     important anymore. Just calling CameraAndReadout without options will
     print out the help with the options names
   * CameraAndReadout.cpp; ReadConfig.[h,cpp]
     - parameters normally in the configuration file can also be given on the
     command line. see ./CameraAndReadout -h for how this is done.
   * ReadConfig.cpp
     - the nsb rate per pixel has to given in MHz in the config file.
     ReadConfig multiplies it with 1000 to get kHz

  2012/06/18  Nepomuk Otte

   * CameraAndReadout.cpp
     - reverted to previous way of writing vbf files. Setting the number of
     pixel per telescope just before the telescope data are written to file
     did not work.

  2012/05/20  Nepomuk Otte

   * TraceGenerator.cpp
     - fixed bug that prevented the right QE etc to be applied in the
     selection of a photon.
   * TelescopeTriggerNextNeighbor;CameraAndReadout
     - added functionality that will display the traces in the triggered pixel
     that resulted in the telescope trigger. They will be displayed in Trigger
     debug mode

  2012/05/06  Nepomuk Otte

   * ReadConfig[.cpp,.h],FADC[.cpp,.h],TraceGenerator[.cpp,.h],CameraAndReadout.cpp,FADC[.cpp,.h],TelescopeTriggerNextNeighbor[.cpp,.h]
     - modified filling traces. The average photon arrival time is not anymore in the center of the trace.
       Now it is determined by the variable STARTSAMPLINGBEFOREAVERAGEPHOTONARRIVALTIME
     - It is now counted in the TraceGenerator for how many events the trace is either two short or too long
       The exact number is output at the end of CARE
     - The same is done in the FADC
     - During runtime a corresponding note is also output to stdout when that happens
     - In the case this happens the FADC DigitizePixel function loops either to the beginning or to the end of the analog trace
       and takes the analog trace from there. This should be fine unless there is a significant number of Cherenkov photons there.

  2012/05/03  Nepomuk Otte

   * FADC.cpp
     - modified the digitizing function. If the simulated trace is not long
     enough. It is being wrapped around and the readout starts from the
     beginning of the trace. This should only happen for noise anyways.
   * TraceGenerator.cpp
     - added a warning to the tracegenerator if the simulated trace is to
     short and does not hold all the Cherenkov photons

  2012/04/30  Nepomuk Otte

   * ReadConfig.h,.cpp CameraAndReadout
     - added option NUMBERPEDESTALEVENTSTOSTABILZE 
	This specifies the number of pedestal events that will be simulated
	to stabilize the discriminator
     - added another argument to CameraAndReadout. If the last argument is a 1
	then the pedestal events given with NUMBERPEDESTALEVENTS 
	will be simulated and written to file

   * TriggerTelescopeNextNeighbor.cpp
     - Change the frequency by which information about the discrimanator are output from
	1000 to 10

  2012/03/07  Nepomuk Otte

   * This is CARE after a complete rewrite of the structure
     This became necessary to allow the simulation of hundreds of 
	 telescopes. At the same time a number of new features had been includes

  2011/07/11  Nepomuk Otte

   * config/CARE_VERITAS_AfterUpgrade.cfg config/CARE_VERITAS_NewArray.cfg
     -  Updated QE curves in both configuration. Old Array has the QE curve 
	    agreed in the Montreal meeting. The upgrade QE curve has a peak QE of
		32%, which is what we see in latest measurements

  2011/03/15  Nepomuk Otte

   * config/CARE_VERITAS_BeforeT1Move.cfg
     -  Added configuration file for VERITAS before the relocation of T1. This
	    one has a 20% lower gain than before the move of T1 and 24 samples in
		the readout instead of 20

  2011/02/07  Nepomuk Otte

   * config/UpgradeHighGainPulseShape.txt config/CARE_VERITAS_AfterUpgrade.cfg
     -  Added configuration file for VERITAS after upgrade. Includes proper QE curve
	    afterpulsing and single pe pulse shape as well as sigma of single pe
		pulse height distribution. Trigger is not fixed (patches and
		configuration)

   2011/01/21  Nepomuk Otte

   * FADC.cpp
     - removed a hard exit of the code if, when writing the FADC trace, the
	 analog trace is too short. The analog values are set to zero in the FADC
	 if that is the case. Needs to be cleaned up. Depends on how often that
		 happens.

   2010/11/12  Nepomuk Otte

   * TraceGenerator.cpp,TriggerTelescopeNextNeighbor.cpp
     - modfications in the AddPEToTrace and GetLowGainTrace routines to speed
       Care up by a factor 2. Some multipications could be transfered out of a
       loop and some memory management could be done better
     - modifications in the LoadEvent routine that brought a 10% speed up of
       CARE

  2010/11/10  Nepomuk Otte

   * CameraAndReadout.cpp
     - small modification to make it work with gcc 4.4.4

  2010/06/24  Nepomuk Otte

   * CameraAndReadout.cpp
     - the vbf writer know gets the number of FADC samples from the CARE config file

   * ReadConfig.cpp .h
     - added function to read the number of FADC samples from the config file 
       and getter function to hand that number over   

   * CARE.cfg
     - changed the start of the first VBF event to 2009

  2010/06/11  Nepomuk Otte

   * CameraAndReadout.cpp
     - ups, my bad. I commited a version of this file earlier where I uncommented
       the line which executed the fadc.
     - events in which the number of photons in each telescope is below a certain number (10 hardcoded)
       are automatically skipped and considered not triggered

  2010/06/11  Nepomuk Otte

   * CameraAndReadout.cpp
     - fixed bug which cause the array trigger bit to always 
       be true in the vbf file

     - fixed bug that caused a crash of CARE at the very end if no VBF file
       is written

  2010/06/07  Nepomuk Otte

   * TriggerTelescopeNextNeighbor.cpp
     - corrected the time used in the calculation of the Rate in the RFB feedback. Subtracted the delay internal to the constant fraction
       This is ony a minor change and should have no effect on the outcome of the simulations

     - Fixed bug that added to much RFB feedback to the trace if more than one pixel is summed. Does not affect VERITAS simulations. 

  2010/06/01  Nepomuk Otte

   * CameraAndReadout.cpp
     - put in the correct pixel coordinates that are written into the VBF file 
       (I hope they are correct)

   2010/06/01  Nepomuk Otte

   * CameraAndReadout.cpp
     - implemented Heikes changes to get the Zenith and Azimuth values in the VBF file right
       thanks for the heavy lifting -> pays for one beer in Cork :)

   2010/06/01  Nepomuk Otte
   
   * CameraAndReadout.cpp
     - fixed bug that wrote Zenith angle instead of Elevation into VBFwrite->setAzimElevTelDeg(....) 
       (credit goes to Heike for finding this)

   * FADC.cpp
     - put bDebug condition around output generated if Channel goes in Low gain

   2010/05/28  Nepomuk Otte

   * FADC,TraceGenerator,CameraAndReadout,ArrayTrigger,TriggerTelescopeNextNeighbor,[h,cpp]
     - Completed setting the debug flags to all couts

   * TraceGenerator.[h,cpp]
     - fixed a bug that did not set the flag properly if Cherenkov photons are in a telescope
     - added the propagation delay to the average photon arrival times if Cherenkov photons are in the trace

   * FADC.[h,cpp]
      
   * config directory did not make it into the CVS the last time. Fixed that now (Thanks Heike)  	

   2010/05/27  Nepomuk Otte

   * FADC,TraceGenerator,CameraAndReadout,ArrayTrigger,TriggerTelescopeNextNeighbor,[h,cpp]
     - Added a debug bool for each class to turn debug informations off and on from the main file

   * CameraAndReadout.[h,cpp]
     - help() updated (Thanks Heike)
     - got rid of 'Note: File "vector" already loaded' message (Thanks Heike)

   * Makefile
     - removed printvbf

   * created directory "config" for the pulse shapes and simulation config files
 
   2010/05/25  Nepomuk Otte

   * *.[h,cpp]
     - First upload of CARE into the cvs. From now on all changes will be documented in this file 
